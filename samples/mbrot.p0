const scale = 1.5;

fun printdensity(d: Int) {
    if d > 8 print (" ");
    else if d > 4 print (".");
    else if d > 3 print ("-");
    else if d > 2 print ("+");
    else if d > 1 print ("*");
    else print("#");
}

fun mandelconverger(real: Float, imag: Float, iters: Int, creal: Float, cimag: Float): Int {
    return iters > 255 || (real * real + imag * imag > 4.0)
        ? iters
        : mandelconverger(real * real - imag * imag + creal, 2.0 * real * imag + cimag, iters + 1, creal, cimag);
}

fun mandelconverge(real: Float, imag: Float): Int {
    println(real, " ", imag);
    return mandelconverger(real, imag, 0, real, imag);
}

fun mandelhelp(xmin: Float, xmax: Float, xstep: Float, ymin: Float, ymax: Float, ystep: Float) {
    println(xmin, " ", xmax, " ", xstep, " ", ymin, " ", ymax, " ", ystep);

    let y = ymin;

    while y < ymax {
        let x = xmin;

        while x < xmax {
            printdensity(mandelconverge(x, y));

            x = x + xstep / scale;
        }
        println();

        y = y + ystep / scale;
    }
}

fun mandel(realstart: Float, imagstart: Float, realmag: Float, imagmag: Float) {
    mandelhelp(realstart, realstart + realmag * 78.0, realmag, imagstart, imagstart + imagmag * 40.0, imagmag);
}

fun main() {
    println(scale);
    mandel(-2.3, -1.3, 0.05, 0.07);

//    println();

//    mandel(-2.0, -1.0, 0.02, 0.04);
//
//    println();
//
//    mandel(-0.9, -1.4, 0.02, 0.03);
}
